{"ast":null,"code":"// API Base URL - update this in production\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// WebSocket URL - update this in production\nconst WS_BASE_URL = 'ws://localhost:5000';\n\n// API Endpoints\nexport const API_ENDPOINTS = {\n  // Auth endpoints\n  AUTH: {\n    LOGIN: `${API_BASE_URL}/auth/login`,\n    REGISTER: `${API_BASE_URL}/auth/register`,\n    USER: `${API_BASE_URL}/auth/user`\n  },\n  // User endpoints\n  USERS: {\n    DOCTORS: `${API_BASE_URL}/users/doctors`,\n    AVAILABILITY: `${API_BASE_URL}/users/availability`,\n    LANGUAGE: `${API_BASE_URL}/users/language`,\n    PROFILE: userId => `${API_BASE_URL}/users/${userId}`\n  },\n  // Chat endpoints\n  CHAT: {\n    CONVERSATION: userId => `${API_BASE_URL}/chat/conversation/${userId}`,\n    CONVERSATIONS: `${API_BASE_URL}/chat/conversations`,\n    MESSAGE: `${API_BASE_URL}/chat/message`\n  },\n  // Speech endpoints\n  SPEECH: {\n    TRANSCRIBE: `${API_BASE_URL}/speech/transcribe`\n  },\n  // Upload endpoints\n  UPLOAD: {\n    AUDIO: `${API_BASE_URL}/upload/audio`\n  }\n};\n\n// WebSocket events\nexport const WS_EVENTS = {\n  JOIN_ROOM: 'join_room',\n  LEAVE_ROOM: 'leave_room',\n  SEND_MESSAGE: 'send_message',\n  RECEIVE_MESSAGE: 'receive_message',\n  USER_ONLINE: 'user_online',\n  USER_OFFLINE: 'user_offline',\n  TYPING: 'typing',\n  STOP_TYPING: 'stop_typing'\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  MESSAGES_PER_PAGE: 50,\n  TYPING_TIMEOUT: 3000,\n  // 3 seconds\n  RECONNECTION_ATTEMPTS: 5,\n  RECONNECTION_DELAY: 3000,\n  // 3 seconds\n  UPLOAD_MAX_SIZE: 10 * 1024 * 1024 // 10MB\n};\n\n// Supported languages for speech recognition and translation\nexport const SUPPORTED_LANGUAGES = [{\n  code: 'en',\n  name: 'English',\n  nativeName: 'English'\n}, {\n  code: 'es',\n  name: 'Spanish',\n  nativeName: 'Español'\n}, {\n  code: 'fr',\n  name: 'French',\n  nativeName: 'Français'\n}, {\n  code: 'de',\n  name: 'German',\n  nativeName: 'Deutsch'\n}, {\n  code: 'it',\n  name: 'Italian',\n  nativeName: 'Italiano'\n}, {\n  code: 'pt',\n  name: 'Portuguese',\n  nativeName: 'Português'\n}, {\n  code: 'ru',\n  name: 'Russian',\n  nativeName: 'Русский'\n}, {\n  code: 'zh',\n  name: 'Chinese',\n  nativeName: '中文'\n}, {\n  code: 'ja',\n  name: 'Japanese',\n  nativeName: '日本語'\n}, {\n  code: 'ko',\n  name: 'Korean',\n  nativeName: '한국어'\n}, {\n  code: 'ar',\n  name: 'Arabic',\n  nativeName: 'العربية'\n}, {\n  code: 'hi',\n  name: 'Hindi',\n  nativeName: 'हिन्दी'\n}, {\n  code: 'ta',\n  name: 'Tamil',\n  nativeName: 'தமிழ்'\n}, {\n  code: 'te',\n  name: 'Telugu',\n  nativeName: 'తెలుగు'\n}, {\n  code: 'kn',\n  name: 'Kannada',\n  nativeName: 'ಕನ್ನಡ'\n}, {\n  code: 'ml',\n  name: 'Malayalam',\n  nativeName: 'മലയാളം'\n}];\n\n// Get language name by code\nexport const getLanguageName = code => {\n  const lang = SUPPORTED_LANGUAGES.find(lang => lang.code === code);\n  return lang ? lang.name : 'Unknown';\n};\nexport default {\n  API_BASE_URL,\n  WS_BASE_URL,\n  API_ENDPOINTS,\n  WS_EVENTS,\n  DEFAULT_SETTINGS,\n  SUPPORTED_LANGUAGES,\n  getLanguageName\n};","map":{"version":3,"names":["API_BASE_URL","WS_BASE_URL","API_ENDPOINTS","AUTH","LOGIN","REGISTER","USER","USERS","DOCTORS","AVAILABILITY","LANGUAGE","PROFILE","userId","CHAT","CONVERSATION","CONVERSATIONS","MESSAGE","SPEECH","TRANSCRIBE","UPLOAD","AUDIO","WS_EVENTS","JOIN_ROOM","LEAVE_ROOM","SEND_MESSAGE","RECEIVE_MESSAGE","USER_ONLINE","USER_OFFLINE","TYPING","STOP_TYPING","DEFAULT_SETTINGS","MESSAGES_PER_PAGE","TYPING_TIMEOUT","RECONNECTION_ATTEMPTS","RECONNECTION_DELAY","UPLOAD_MAX_SIZE","SUPPORTED_LANGUAGES","code","name","nativeName","getLanguageName","lang","find"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/config.ts"],"sourcesContent":["// API Base URL - update this in production\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// WebSocket URL - update this in production\nconst WS_BASE_URL = 'ws://localhost:5000';\n\n// API Endpoints\nexport const API_ENDPOINTS = {\n  // Auth endpoints\n  AUTH: {\n    LOGIN: `${API_BASE_URL}/auth/login`,\n    REGISTER: `${API_BASE_URL}/auth/register`,\n    USER: `${API_BASE_URL}/auth/user`,\n  },\n  \n  // User endpoints\n  USERS: {\n    DOCTORS: `${API_BASE_URL}/users/doctors`,\n    AVAILABILITY: `${API_BASE_URL}/users/availability`,\n    LANGUAGE: `${API_BASE_URL}/users/language`,\n    PROFILE: (userId: string) => `${API_BASE_URL}/users/${userId}`,\n  },\n  \n  // Chat endpoints\n  CHAT: {\n    CONVERSATION: (userId: string) => `${API_BASE_URL}/chat/conversation/${userId}`,\n    CONVERSATIONS: `${API_BASE_URL}/chat/conversations`,\n    MESSAGE: `${API_BASE_URL}/chat/message`,\n  },\n  \n  // Speech endpoints\n  SPEECH: {\n    TRANSCRIBE: `${API_BASE_URL}/speech/transcribe`,\n  },\n  \n  // Upload endpoints\n  UPLOAD: {\n    AUDIO: `${API_BASE_URL}/upload/audio`,\n  },\n};\n\n// WebSocket events\nexport const WS_EVENTS = {\n  JOIN_ROOM: 'join_room',\n  LEAVE_ROOM: 'leave_room',\n  SEND_MESSAGE: 'send_message',\n  RECEIVE_MESSAGE: 'receive_message',\n  USER_ONLINE: 'user_online',\n  USER_OFFLINE: 'user_offline',\n  TYPING: 'typing',\n  STOP_TYPING: 'stop_typing',\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  MESSAGES_PER_PAGE: 50,\n  TYPING_TIMEOUT: 3000, // 3 seconds\n  RECONNECTION_ATTEMPTS: 5,\n  RECONNECTION_DELAY: 3000, // 3 seconds\n  UPLOAD_MAX_SIZE: 10 * 1024 * 1024, // 10MB\n};\n\n// Supported languages for speech recognition and translation\nexport const SUPPORTED_LANGUAGES = [\n  { code: 'en', name: 'English', nativeName: 'English' },\n  { code: 'es', name: 'Spanish', nativeName: 'Español' },\n  { code: 'fr', name: 'French', nativeName: 'Français' },\n  { code: 'de', name: 'German', nativeName: 'Deutsch' },\n  { code: 'it', name: 'Italian', nativeName: 'Italiano' },\n  { code: 'pt', name: 'Portuguese', nativeName: 'Português' },\n  { code: 'ru', name: 'Russian', nativeName: 'Русский' },\n  { code: 'zh', name: 'Chinese', nativeName: '中文' },\n  { code: 'ja', name: 'Japanese', nativeName: '日本語' },\n  { code: 'ko', name: 'Korean', nativeName: '한국어' },\n  { code: 'ar', name: 'Arabic', nativeName: 'العربية' },\n  { code: 'hi', name: 'Hindi', nativeName: 'हिन्दी' },\n  { code: 'ta', name: 'Tamil', nativeName: 'தமிழ்' },\n  { code: 'te', name: 'Telugu', nativeName: 'తెలుగు' },\n  { code: 'kn', name: 'Kannada', nativeName: 'ಕನ್ನಡ' },\n  { code: 'ml', name: 'Malayalam', nativeName: 'മലയാളം' },\n];\n\n// Get language name by code\nexport const getLanguageName = (code: string) => {\n  const lang = SUPPORTED_LANGUAGES.find(lang => lang.code === code);\n  return lang ? lang.name : 'Unknown';\n};\n\nexport default {\n  API_BASE_URL,\n  WS_BASE_URL,\n  API_ENDPOINTS,\n  WS_EVENTS,\n  DEFAULT_SETTINGS,\n  SUPPORTED_LANGUAGES,\n  getLanguageName,\n};\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,WAAW,GAAG,qBAAqB;;AAEzC;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3B;EACAC,IAAI,EAAE;IACJC,KAAK,EAAE,GAAGJ,YAAY,aAAa;IACnCK,QAAQ,EAAE,GAAGL,YAAY,gBAAgB;IACzCM,IAAI,EAAE,GAAGN,YAAY;EACvB,CAAC;EAED;EACAO,KAAK,EAAE;IACLC,OAAO,EAAE,GAAGR,YAAY,gBAAgB;IACxCS,YAAY,EAAE,GAAGT,YAAY,qBAAqB;IAClDU,QAAQ,EAAE,GAAGV,YAAY,iBAAiB;IAC1CW,OAAO,EAAGC,MAAc,IAAK,GAAGZ,YAAY,UAAUY,MAAM;EAC9D,CAAC;EAED;EACAC,IAAI,EAAE;IACJC,YAAY,EAAGF,MAAc,IAAK,GAAGZ,YAAY,sBAAsBY,MAAM,EAAE;IAC/EG,aAAa,EAAE,GAAGf,YAAY,qBAAqB;IACnDgB,OAAO,EAAE,GAAGhB,YAAY;EAC1B,CAAC;EAED;EACAiB,MAAM,EAAE;IACNC,UAAU,EAAE,GAAGlB,YAAY;EAC7B,CAAC;EAED;EACAmB,MAAM,EAAE;IACNC,KAAK,EAAE,GAAGpB,YAAY;EACxB;AACF,CAAC;;AAED;AACA,OAAO,MAAMqB,SAAS,GAAG;EACvBC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BC,eAAe,EAAE,iBAAiB;EAClCC,WAAW,EAAE,aAAa;EAC1BC,YAAY,EAAE,cAAc;EAC5BC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,iBAAiB,EAAE,EAAE;EACrBC,cAAc,EAAE,IAAI;EAAE;EACtBC,qBAAqB,EAAE,CAAC;EACxBC,kBAAkB,EAAE,IAAI;EAAE;EAC1BC,eAAe,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE;AACrC,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,CACjC;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAU,CAAC,EACtD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAU,CAAC,EACtD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAW,CAAC,EACtD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAU,CAAC,EACrD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAW,CAAC,EACvD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,YAAY;EAAEC,UAAU,EAAE;AAAY,CAAC,EAC3D;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAU,CAAC,EACtD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAK,CAAC,EACjD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,UAAU;EAAEC,UAAU,EAAE;AAAM,CAAC,EACnD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAM,CAAC,EACjD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAU,CAAC,EACrD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,OAAO;EAAEC,UAAU,EAAE;AAAS,CAAC,EACnD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,OAAO;EAAEC,UAAU,EAAE;AAAQ,CAAC,EAClD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAS,CAAC,EACpD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAQ,CAAC,EACpD;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE,WAAW;EAAEC,UAAU,EAAE;AAAS,CAAC,CACxD;;AAED;AACA,OAAO,MAAMC,eAAe,GAAIH,IAAY,IAAK;EAC/C,MAAMI,IAAI,GAAGL,mBAAmB,CAACM,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACJ,IAAI,KAAKA,IAAI,CAAC;EACjE,OAAOI,IAAI,GAAGA,IAAI,CAACH,IAAI,GAAG,SAAS;AACrC,CAAC;AAED,eAAe;EACbtC,YAAY;EACZC,WAAW;EACXC,aAAa;EACbmB,SAAS;EACTS,gBAAgB;EAChBM,mBAAmB;EACnBI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}