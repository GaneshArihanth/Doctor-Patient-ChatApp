{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, List, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, Button, CircularProgress, Badge, Switch, FormControlLabel, TextField, InputAdornment } from '@mui/material';\nimport { Person as PersonIcon, Search as SearchIcon, Chat as ChatIcon, CheckCircle as CheckCircleIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport { format, parseISO, isValid } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isAvailable, setIsAvailable] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/chat/conversations`);\n        const conversations = response.data || [];\n        const patientsList = conversations.map(conversation => {\n          var _conversation$lastMes, _conversation$lastMes2;\n          const lastSeenDate = conversation.user.lastSeen ? parseISO(conversation.user.lastSeen) : null;\n          const lastMessageDate = (_conversation$lastMes = conversation.lastMessage) !== null && _conversation$lastMes !== void 0 && _conversation$lastMes.createdAt ? parseISO(conversation.lastMessage.createdAt) : null;\n          return {\n            id: conversation.user.id,\n            name: conversation.user.name,\n            email: conversation.user.email,\n            lastSeen: lastSeenDate && isValid(lastSeenDate) ? format(lastSeenDate, 'p, dd/MM/yy') : 'N/A',\n            unreadCount: conversation.unreadCount || 0,\n            lastMessage: ((_conversation$lastMes2 = conversation.lastMessage) === null || _conversation$lastMes2 === void 0 ? void 0 : _conversation$lastMes2.content) || '',\n            lastMessageTime: lastMessageDate && isValid(lastMessageDate) ? format(lastMessageDate, 'p') : ''\n          };\n        });\n        setPatients(patientsList);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user) {\n      fetchPatients();\n      updateAvailability();\n    }\n  }, [user]);\n  const updateAvailability = async () => {\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, {\n        isAvailable\n      });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n    }\n  };\n  const handleAvailabilityChange = async event => {\n    const newStatus = event.target.checked;\n    setIsAvailable(newStatus);\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, {\n        isAvailable: newStatus\n      });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n      setIsAvailable(!newStatus); // Revert on error\n    }\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(searchTerm.toLowerCase()) || patient.email.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleStartChat = patientId => {\n    navigate(`/chat/${patientId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            children: \"Manage your patient consultations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: isAvailable,\n              onChange: handleAvailabilityChange,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: 10,\n                  height: 10,\n                  borderRadius: '50%',\n                  bgcolor: isAvailable ? 'success.main' : 'error.main',\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: isAvailable ? 'Available' : 'Unavailable'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => logout(),\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Search patients...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                color: \"action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: filteredPatients.length > 0 ? filteredPatients.map((patient, index) => {\n            var _patient$unreadCount;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => handleStartChat(patient.id),\n                  children: \"Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    overlap: \"circular\",\n                    anchorOrigin: {\n                      vertical: 'bottom',\n                      horizontal: 'right'\n                    },\n                    variant: \"dot\",\n                    color: \"success\",\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"subtitle1\",\n                      children: patient.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      ml: 1,\n                      children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                        color: \"success\",\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        ml: 0.5,\n                        children: \"Online\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.primary\",\n                      display: \"block\",\n                      noWrap: true,\n                      sx: {\n                        maxWidth: '500px'\n                      },\n                      children: patient.lastMessage || 'No messages yet'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: patient.lastSeen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), ((_patient$unreadCount = patient.unreadCount) !== null && _patient$unreadCount !== void 0 ? _patient$unreadCount : 0) > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                  ml: 2,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: 'primary.main',\n                      width: 24,\n                      height: 24,\n                      fontSize: '0.75rem'\n                    },\n                    children: patient.unreadCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), index < filteredPatients.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 59\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            py: 4,\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n              color: \"disabled\",\n              sx: {\n                fontSize: 60,\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"No patients found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: searchTerm ? 'Try a different search term' : 'Patients who message you will appear here'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDashboard, \"ECkgaZ9JoeptNMrPobnhipjrQls=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","API_BASE_URL","useNavigate","Container","Typography","Box","Paper","List","ListItem","ListItemAvatar","Avatar","ListItemText","Divider","Button","CircularProgress","Badge","Switch","FormControlLabel","TextField","InputAdornment","Person","PersonIcon","Search","SearchIcon","Chat","ChatIcon","CheckCircle","CheckCircleIcon","useAuth","axios","format","parseISO","isValid","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","patients","setPatients","loading","setLoading","isAvailable","setIsAvailable","searchTerm","setSearchTerm","user","logout","navigate","fetchPatients","response","get","conversations","data","patientsList","map","conversation","_conversation$lastMes","_conversation$lastMes2","lastSeenDate","lastSeen","lastMessageDate","lastMessage","createdAt","id","name","email","unreadCount","content","lastMessageTime","error","console","updateAvailability","put","handleAvailabilityChange","event","newStatus","target","checked","filteredPatients","filter","patient","toLowerCase","includes","handleStartChat","patientId","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","my","mb","variant","component","gutterBottom","color","gap","control","onChange","label","width","height","borderRadius","bgcolor","mr","onClick","elevation","p","fullWidth","placeholder","value","e","InputProps","startAdornment","position","length","index","_patient$unreadCount","secondaryAction","startIcon","overlap","anchorOrigin","vertical","horizontal","primary","ml","fontSize","secondary","noWrap","textAlign","py","_c","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Divider,\n  Button,\n  CircularProgress,\n  Badge,\n  Switch,\n  FormControlLabel,\n  TextField,\n  InputAdornment\n} from '@mui/material';\nimport { \n  Person as PersonIcon, \n  Search as SearchIcon,\n  Chat as ChatIcon,\n  MedicalServices as MedicalServicesIcon,\n  CheckCircle as CheckCircleIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport { format, parseISO, isValid } from 'date-fns';\n\ninterface Patient {\n  id: string;\n  name: string;\n  email: string;\n  lastSeen: string;\n  unreadCount?: number;\n  lastMessage?: string;\n  lastMessageTime?: string;\n}\n\nconst DoctorDashboard: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isAvailable, setIsAvailable] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/chat/conversations`);\n        const conversations = response.data || [];\n        \n                const patientsList = conversations.map((conversation: any) => {\n          const lastSeenDate = conversation.user.lastSeen ? parseISO(conversation.user.lastSeen) : null;\n          const lastMessageDate = conversation.lastMessage?.createdAt ? parseISO(conversation.lastMessage.createdAt) : null;\n\n          return {\n            id: conversation.user.id,\n            name: conversation.user.name,\n            email: conversation.user.email,\n            lastSeen: lastSeenDate && isValid(lastSeenDate) ? format(lastSeenDate, 'p, dd/MM/yy') : 'N/A',\n            unreadCount: conversation.unreadCount || 0,\n            lastMessage: conversation.lastMessage?.content || '',\n            lastMessageTime: lastMessageDate && isValid(lastMessageDate) \n              ? format(lastMessageDate, 'p')\n              : ''\n          }\n        });\n\n        setPatients(patientsList);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user) {\n      fetchPatients();\n      updateAvailability();\n    }\n  }, [user]);\n\n  const updateAvailability = async () => {\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, { isAvailable });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n    }\n  };\n\n  const handleAvailabilityChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newStatus = event.target.checked;\n    setIsAvailable(newStatus);\n    \n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, { isAvailable: newStatus });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n      setIsAvailable(!newStatus); // Revert on error\n    }\n  };\n\n  const filteredPatients = patients.filter(patient =>\n    patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    patient.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleStartChat = (patientId: string) => {\n    navigate(`/chat/${patientId}`);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ my: 4 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n          <Box>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              My Patients\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Manage your patient consultations\n            </Typography>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <FormControlLabel\n              control={\n                <Switch \n                  checked={isAvailable} \n                  onChange={handleAvailabilityChange}\n                  color=\"primary\"\n                />\n              }\n              label={\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Box \n                    sx={{\n                      width: 10,\n                      height: 10,\n                      borderRadius: '50%',\n                      bgcolor: isAvailable ? 'success.main' : 'error.main',\n                      mr: 1\n                    }}\n                  />\n                  <Typography variant=\"body2\">\n                    {isAvailable ? 'Available' : 'Unavailable'}\n                  </Typography>\n                </Box>\n              }\n            />\n            <Button \n              variant=\"outlined\" \n              color=\"primary\"\n              onClick={() => logout()}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Box>\n\n        <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search patients...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon color=\"action\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Paper>\n\n        <Paper elevation={2}>\n          <List>\n            {filteredPatients.length > 0 ? (\n              filteredPatients.map((patient, index) => (\n                <React.Fragment key={patient.id}>\n                  <ListItem \n                    alignItems=\"flex-start\"\n                    secondaryAction={\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ChatIcon />}\n                        onClick={() => handleStartChat(patient.id)}\n                      >\n                        Chat\n                      </Button>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Badge\n                        overlap=\"circular\"\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                        variant=\"dot\"\n                        color=\"success\"\n                      >\n                        <Avatar>\n                          <PersonIcon />\n                        </Avatar>\n                      </Badge>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Box display=\"flex\" alignItems=\"center\">\n                          <Typography component=\"span\" variant=\"subtitle1\">\n                            {patient.name}\n                          </Typography>\n                          <Box display=\"flex\" alignItems=\"center\" ml={1}>\n                            <CheckCircleIcon color=\"success\" fontSize=\"small\" />\n                            <Typography variant=\"caption\" color=\"text.secondary\" ml={0.5}>\n                              Online\n                            </Typography>\n                          </Box>\n                        </Box>\n                      }\n                      secondary={\n                        <>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            display=\"block\"\n                            noWrap\n                            sx={{ maxWidth: '500px' }}\n                          >\n                            {patient.lastMessage || 'No messages yet'}\n                          </Typography>\n                          <Typography\n                            component=\"span\"\n                            variant=\"caption\"\n                            color=\"text.secondary\"\n                          >\n                            {patient.lastSeen}\n                          </Typography>\n                        </>\n                      }\n                    />\n                    {(patient.unreadCount ?? 0) > 0 && (\n                      <Box ml={2}>\n                        <Avatar sx={{ bgcolor: 'primary.main', width: 24, height: 24, fontSize: '0.75rem' }}>\n                          {patient.unreadCount}\n                        </Avatar>\n                      </Box>\n                    )}\n                  </ListItem>\n                  {index < filteredPatients.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n                </React.Fragment>\n              ))\n            ) : (\n              <Box textAlign=\"center\" py={4}>\n                <PersonIcon color=\"disabled\" sx={{ fontSize: 60, mb: 2 }} />\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  No patients found\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {searchTerm ? 'Try a different search term' : 'Patients who message you will appear here'}\n                </Typography>\n              </Box>\n            )}\n          </List>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DoctorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}