{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = API_BASE_URL;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Set auth token for axios requests\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n      loadUser();\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n  }, [token]);\n\n  // Load user data\n  const loadUser = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/auth/user`);\n      setUser(res.data);\n    } catch (err) {\n      console.error('Error loading user', err);\n      logout();\n    }\n  };\n\n  // Register user\n  const register = async (name, email, password, role) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password,\n        role\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n\n      // Redirect based on role\n      navigate(role === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n\n      // Redirect based on role\n      navigate(res.data.user.role === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Update user language preference\n  const updateUserLanguage = async language => {\n    try {\n      const res = await axios.put(`${API_URL}/users/language`, {\n        language\n      });\n      setUser(res.data);\n    } catch (err) {\n      console.error('Error updating language', err);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      loading,\n      error,\n      updateUserLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"W1QGS0BLh7Ja3Md3iMGvP3p/FMo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","useNavigate","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","navigate","defaults","headers","common","loadUser","res","get","data","err","console","logout","register","name","email","password","role","post","setItem","_err$response","_err$response$data","response","msg","login","_err$response2","_err$response2$data","removeItem","updateUserLanguage","language","put","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\n\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n  role: 'doctor' | 'patient';\n  token: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string, role: 'doctor' | 'patient') => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n  error: string | null;\n  updateUserLanguage: (language: string) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_URL = API_BASE_URL;\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Set auth token for axios requests\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n      loadUser();\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n  }, [token]);\n\n  // Load user data\n  const loadUser = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/auth/user`);\n      setUser(res.data);\n    } catch (err) {\n      console.error('Error loading user', err);\n      logout();\n    }\n  };\n\n  // Register user\n  const register = async (name: string, email: string, password: string, role: 'doctor' | 'patient') => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const res = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password,\n        role\n      });\n      \n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      \n      // Redirect based on role\n      navigate(role === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\n    } catch (err: any) {\n      setError(err.response?.data?.msg || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email: string, password: string) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const res = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      \n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      \n      // Redirect based on role\n      navigate(res.data.user.role === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\n    } catch (err: any) {\n      setError(err.response?.data?.msg || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Update user language preference\n  const updateUserLanguage = async (language: string) => {\n    try {\n      const res = await axios.put(`${API_URL}/users/language`, { language });\n      setUser(res.data);\n    } catch (err) {\n      console.error('Error updating language', err);\n      throw err;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        login,\n        register,\n        logout,\n        loading,\n        error,\n        updateUserLanguage,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}