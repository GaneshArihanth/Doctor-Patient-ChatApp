{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '../config';\nexport const uploadFile = async (file, senderId, receiverId, content = '', token) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('senderId', senderId);\n  formData.append('receiverId', receiverId);\n  formData.append('content', content);\n  const response = await axios.post(`${API_BASE_URL}/chat/upload`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'x-auth-token': token\n    }\n  });\n  return response.data.attachment;\n};\nexport const getFileUrl = path => {\n  // If the path already contains the full URL, return it as is\n  if (path.startsWith('http')) return path;\n\n  // Remove any leading slashes to prevent double slashes\n  let cleanPath = path.startsWith('/') ? path.substring(1) : path;\n\n  // Remove /api/ prefix if it exists to prevent double /api\n  if (cleanPath.startsWith('api/')) {\n    cleanPath = cleanPath.substring(4);\n  }\n\n  // Return the full URL\n  return `${API_BASE_URL}/${cleanPath}`;\n};\nexport const getFileIcon = fileType => {\n  const iconMap = {\n    'application/pdf': 'picture_as_pdf',\n    'application/msword': 'description',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'description',\n    'application/vnd.ms-excel': 'table_chart',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'table_chart',\n    'text/plain': 'insert_drive_file'\n  };\n  return iconMap[fileType] || 'insert_drive_file';\n};\nexport const isImage = fileType => {\n  return fileType.startsWith('image/');\n};","map":{"version":3,"names":["axios","API_BASE_URL","uploadFile","file","senderId","receiverId","content","token","formData","FormData","append","response","post","headers","data","attachment","getFileUrl","path","startsWith","cleanPath","substring","getFileIcon","fileType","iconMap","isImage"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/utils/fileUpload.ts"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nexport interface UploadedFile {\n  fileName: string;\n  fileUrl: string;\n  fileType: 'image' | 'document' | 'other';\n  fileSize: number;\n}\n\nexport const uploadFile = async (\n  file: File,\n  senderId: string,\n  receiverId: string,\n  content: string = '',\n  token: string\n): Promise<UploadedFile> => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('senderId', senderId);\n  formData.append('receiverId', receiverId);\n  formData.append('content', content);\n\n  const response = await axios.post(`${API_BASE_URL}/chat/upload`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'x-auth-token': token,\n    },\n  });\n\n  return response.data.attachment;\n};\n\nexport const getFileUrl = (path: string): string => {\n  // If the path already contains the full URL, return it as is\n  if (path.startsWith('http')) return path;\n  \n  // Remove any leading slashes to prevent double slashes\n  let cleanPath = path.startsWith('/') ? path.substring(1) : path;\n  \n  // Remove /api/ prefix if it exists to prevent double /api\n  if (cleanPath.startsWith('api/')) {\n    cleanPath = cleanPath.substring(4);\n  }\n  \n  // Return the full URL\n  return `${API_BASE_URL}/${cleanPath}`;\n};\n\nexport const getFileIcon = (fileType: string): string => {\n  const iconMap: { [key: string]: string } = {\n    'application/pdf': 'picture_as_pdf',\n    'application/msword': 'description',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'description',\n    'application/vnd.ms-excel': 'table_chart',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'table_chart',\n    'text/plain': 'insert_drive_file',\n  };\n\n  return iconMap[fileType] || 'insert_drive_file';\n};\n\nexport const isImage = (fileType: string): boolean => {\n  return fileType.startsWith('image/');\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,WAAW;AASxC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACxBC,IAAU,EACVC,QAAgB,EAChBC,UAAkB,EAClBC,OAAe,GAAG,EAAE,EACpBC,KAAa,KACa;EAC1B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EAC7BK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;EACrCI,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,UAAU,CAAC;EACzCG,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;EAEnC,MAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,YAAY,cAAc,EAAEO,QAAQ,EAAE;IACzEK,OAAO,EAAE;MACP,cAAc,EAAE,qBAAqB;MACrC,cAAc,EAAEN;IAClB;EACF,CAAC,CAAC;EAEF,OAAOI,QAAQ,CAACG,IAAI,CAACC,UAAU;AACjC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAY,IAAa;EAClD;EACA,IAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOD,IAAI;;EAExC;EACA,IAAIE,SAAS,GAAGF,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC,GAAGH,IAAI;;EAE/D;EACA,IAAIE,SAAS,CAACD,UAAU,CAAC,MAAM,CAAC,EAAE;IAChCC,SAAS,GAAGA,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;EACpC;;EAEA;EACA,OAAO,GAAGnB,YAAY,IAAIkB,SAAS,EAAE;AACvC,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,QAAgB,IAAa;EACvD,MAAMC,OAAkC,GAAG;IACzC,iBAAiB,EAAE,gBAAgB;IACnC,oBAAoB,EAAE,aAAa;IACnC,yEAAyE,EAAE,aAAa;IACxF,0BAA0B,EAAE,aAAa;IACzC,mEAAmE,EAAE,aAAa;IAClF,YAAY,EAAE;EAChB,CAAC;EAED,OAAOA,OAAO,CAACD,QAAQ,CAAC,IAAI,mBAAmB;AACjD,CAAC;AAED,OAAO,MAAME,OAAO,GAAIF,QAAgB,IAAc;EACpD,OAAOA,QAAQ,CAACJ,UAAU,CAAC,QAAQ,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}