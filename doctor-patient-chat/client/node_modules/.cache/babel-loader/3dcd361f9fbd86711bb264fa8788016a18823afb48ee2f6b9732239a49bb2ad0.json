{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/ChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, IconButton, TextField, Paper, Avatar, useTheme } from '@mui/material';\nimport { ArrowBack, Send, Mic, AttachFile } from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport ChatMessage from '../components/chat/ChatMessage';\nimport AudioRecorder from '../components/chat/AudioRecorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPageWithAudio = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const {\n    user: currentUser\n  } = useAuth();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [otherUser, setOtherUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [showAudioRecorder, setShowAudioRecorder] = useState(false);\n  const messagesEndRef = useRef(null);\n  const audioRefs = useRef({});\n\n  // Fetch chat data and other user's info\n  useEffect(() => {\n    if (!chatId) return;\n    const fetchChatData = async () => {\n      try {\n        // First, fetch the current user's info to determine their role\n        const currentUserRes = await axios.get(`${API_BASE_URL}/users/me`, {\n          headers: {\n            'x-auth-token': (currentUser === null || currentUser === void 0 ? void 0 : currentUser.token) || ''\n          }\n        });\n        const currentUserRole = currentUserRes.data.role;\n\n        // If current user is a patient, fetch doctor's info\n        if (currentUserRole === 'patient') {\n          try {\n            // Fetch the doctor's info\n            const doctorRes = await axios.get(`${API_BASE_URL}/users/doctors`, {\n              headers: {\n                'x-auth-token': (currentUser === null || currentUser === void 0 ? void 0 : currentUser.token) || ''\n              }\n            });\n\n            // Find the specific doctor from the list\n            const doctor = doctorRes.data.find(d => d._id === chatId);\n            if (doctor) {\n              setOtherUser({\n                _id: doctor._id,\n                name: doctor.name,\n                role: 'doctor'\n              });\n            } else {\n              console.error('Doctor not found');\n              setOtherUser({\n                _id: chatId,\n                name: 'Doctor',\n                role: 'doctor'\n              });\n            }\n          } catch (err) {\n            console.error('Error fetching doctor info:', err);\n            setOtherUser({\n              _id: chatId,\n              name: 'Doctor',\n              role: 'doctor'\n            });\n          }\n        } else {\n          // If current user is a doctor, fetch patient's info\n          // This would be implemented similarly with a patients endpoint\n          setOtherUser({\n            _id: chatId,\n            name: 'Patient',\n            role: 'patient'\n          });\n        }\n\n        // Fetch messages for this chat\n        // const messagesRes = await axios.get(`${API_BASE_URL}/chat/messages/${chatId}`);\n        // setMessages(messagesRes.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n        setOtherUser({\n          _id: chatId,\n          name: 'User',\n          role: 'user'\n        });\n      }\n    };\n    fetchChatData();\n  }, [chatId]);\n\n  // Get the other user's name (in a real app, this would come from the API)\n  const getOtherUserName = () => {\n    if (otherUser !== null && otherUser !== void 0 && otherUser.name) return otherUser.name;\n    return 'Loading...';\n  };\n\n  // Get initials for avatar\n  const getInitials = name => {\n    if (!name) return 'U';\n    return name.split(' ').map(part => part[0]).join('').slice(0, 2).toUpperCase();\n  };\n  const handleSendMessage = (content, audioBlob) => {\n    if (!content.trim() && !audioBlob || !currentUser) return;\n    const tempId = `temp-${Date.now()}`;\n    const newMessage = {\n      _id: tempId,\n      sender: {\n        _id: currentUser._id,\n        name: currentUser.name\n      },\n      content,\n      audioUrl: audioBlob ? URL.createObjectURL(audioBlob) : undefined,\n      createdAt: new Date().toISOString(),\n      status: 'sending'\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n\n    // Simulate sending\n    setTimeout(() => {\n      setMessages(prev => prev.map(msg => msg._id === tempId ? {\n        ...msg,\n        status: 'sent'\n      } : msg));\n    }, 1000);\n  };\n  const handlePlayAudio = url => {\n    // Stop any currently playing audio\n    Object.values(audioRefs.current).forEach(audio => {\n      if (!audio.paused) {\n        audio.pause();\n        audio.currentTime = 0;\n      }\n    });\n\n    // Play the selected audio\n    const audio = new Audio(url);\n    audioRefs.current[url] = audio;\n    audio.play().catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          ml: 2,\n          bgcolor: 'primary.main'\n        },\n        children: getInitials(getOtherUserName())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: getOtherUserName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: (otherUser === null || otherUser === void 0 ? void 0 : otherUser.role) === 'doctor' ? 'Doctor' : 'Patient'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 2,\n        bgcolor: theme.palette.grey[50]\n      },\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg,\n        isOwnMessage: msg.sender._id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser._id),\n        onPlayAudio: msg.audioUrl ? () => handlePlayAudio(msg.audioUrl) : undefined\n      }, msg._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), showAudioRecorder && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderTop: `1px solid ${theme.palette.divider}`\n      },\n      children: /*#__PURE__*/_jsxDEV(AudioRecorder, {\n        onSend: blob => {\n          handleSendMessage('Voice message', blob);\n          setShowAudioRecorder(false);\n        },\n        onCancel: () => setShowAudioRecorder(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: 'flex',\n        gap: 1,\n        borderTop: `1px solid ${theme.palette.divider}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        id: \"chat-message-input\",\n        label: \"Type a message\",\n        \"aria-label\": \"Type a message\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(message),\n        disabled: showAudioRecorder,\n        size: \"small\",\n        sx: {\n          bgcolor: 'background.paper',\n          borderRadius: 2,\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              border: 'none'\n            },\n            '&:hover fieldset': {\n              border: 'none'\n            },\n            '&.Mui-focused fieldset': {\n              border: 'none'\n            }\n          }\n        },\n        InputLabelProps: {\n          shrink: false,\n          'aria-hidden': true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => showAudioRecorder ? setShowAudioRecorder(false) : setShowAudioRecorder(true),\n        color: showAudioRecorder ? 'primary' : 'default',\n        children: /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleSendMessage(message),\n        disabled: !message.trim() || showAudioRecorder,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPageWithAudio, \"rKymB3iarWt5rv/lWhVmBA/q+lQ=\", false, function () {\n  return [useParams, useAuth, useTheme, useNavigate];\n});\n_c = ChatPageWithAudio;\nexport default ChatPageWithAudio;\nvar _c;\n$RefreshReg$(_c, \"ChatPageWithAudio\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","IconButton","TextField","Paper","Avatar","useTheme","ArrowBack","Send","Mic","AttachFile","useParams","useNavigate","useAuth","axios","API_BASE_URL","ChatMessage","AudioRecorder","jsxDEV","_jsxDEV","ChatPageWithAudio","_s","chatId","user","currentUser","theme","navigate","otherUser","setOtherUser","messages","setMessages","message","setMessage","showAudioRecorder","setShowAudioRecorder","messagesEndRef","audioRefs","fetchChatData","currentUserRes","get","headers","token","currentUserRole","data","role","doctorRes","doctor","find","d","_id","name","console","error","err","getOtherUserName","getInitials","split","map","part","join","slice","toUpperCase","handleSendMessage","content","audioBlob","trim","tempId","Date","now","newMessage","sender","audioUrl","URL","createObjectURL","undefined","createdAt","toISOString","status","prev","setTimeout","msg","handlePlayAudio","url","Object","values","current","forEach","audio","paused","pause","currentTime","Audio","play","catch","sx","display","flexDirection","height","children","p","alignItems","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ml","bgcolor","variant","color","flex","overflow","palette","grey","isOwnMessage","onPlayAudio","ref","borderTop","divider","onSend","blob","onCancel","gap","fullWidth","id","label","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","disabled","size","borderRadius","border","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/ChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, IconButton, TextField, Paper, Avatar, Badge, useTheme } from '@mui/material';\nimport { ArrowBack, Send, Mic, AttachFile } from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport ChatMessage from '../components/chat/ChatMessage';\nimport AudioRecorder from '../components/chat/AudioRecorder';\n\ninterface Message {\n  _id: string;\n  sender: { _id: string; name: string; avatar?: string };\n  content: string;\n  audioUrl?: string;\n  createdAt: string;\n  status: 'sending' | 'sent' | 'failed';\n}\n\nconst ChatPageWithAudio: React.FC = () => {\n  const { chatId } = useParams<{ chatId: string }>();\n  const { user: currentUser } = useAuth();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [otherUser, setOtherUser] = useState<{_id: string, name: string, role: string} | null>(null);\n  \n  const [messages, setMessages] = useState<Message[]>([]);\n  const [message, setMessage] = useState('');\n  const [showAudioRecorder, setShowAudioRecorder] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const audioRefs = useRef<{[key: string]: HTMLAudioElement}>({});\n\n  // Fetch chat data and other user's info\n  useEffect(() => {\n    if (!chatId) return;\n    \n    const fetchChatData = async () => {\n      try {\n        // First, fetch the current user's info to determine their role\n        const currentUserRes = await axios.get(`${API_BASE_URL}/users/me`, {\n          headers: {\n            'x-auth-token': currentUser?.token || ''\n          }\n        });\n        \n        const currentUserRole = currentUserRes.data.role;\n        \n        // If current user is a patient, fetch doctor's info\n        if (currentUserRole === 'patient') {\n          try {\n            // Fetch the doctor's info\n            const doctorRes = await axios.get(`${API_BASE_URL}/users/doctors`, {\n              headers: {\n                'x-auth-token': currentUser?.token || ''\n              }\n            });\n            \n            // Find the specific doctor from the list\n            const doctor = doctorRes.data.find((d: any) => d._id === chatId);\n            \n            if (doctor) {\n              setOtherUser({\n                _id: doctor._id,\n                name: doctor.name,\n                role: 'doctor'\n              });\n            } else {\n              console.error('Doctor not found');\n              setOtherUser({\n                _id: chatId,\n                name: 'Doctor',\n                role: 'doctor'\n              });\n            }\n          } catch (err) {\n            console.error('Error fetching doctor info:', err);\n            setOtherUser({\n              _id: chatId,\n              name: 'Doctor',\n              role: 'doctor'\n            });\n          }\n        } else {\n          // If current user is a doctor, fetch patient's info\n          // This would be implemented similarly with a patients endpoint\n          setOtherUser({\n            _id: chatId,\n            name: 'Patient',\n            role: 'patient'\n          });\n        }\n        \n        // Fetch messages for this chat\n        // const messagesRes = await axios.get(`${API_BASE_URL}/chat/messages/${chatId}`);\n        // setMessages(messagesRes.data);\n      } catch (error) {\n        console.error('Error fetching chat data:', error);\n        setOtherUser({\n          _id: chatId,\n          name: 'User',\n          role: 'user'\n        });\n      }\n    };\n    \n    fetchChatData();\n  }, [chatId]);\n  \n  // Get the other user's name (in a real app, this would come from the API)\n  const getOtherUserName = () => {\n    if (otherUser?.name) return otherUser.name;\n    return 'Loading...';\n  };\n  \n  // Get initials for avatar\n  const getInitials = (name: string) => {\n    if (!name) return 'U';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .slice(0, 2)\n      .toUpperCase();\n  };\n\n  const handleSendMessage = (content: string, audioBlob?: Blob) => {\n    if ((!content.trim() && !audioBlob) || !currentUser) return;\n    \n    const tempId = `temp-${Date.now()}`;\n    const newMessage: Message = {\n      _id: tempId,\n      sender: { _id: currentUser._id, name: currentUser.name },\n      content,\n      audioUrl: audioBlob ? URL.createObjectURL(audioBlob) : undefined,\n      createdAt: new Date().toISOString(),\n      status: 'sending',\n    };\n    \n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n    \n    // Simulate sending\n    setTimeout(() => {\n      setMessages(prev => \n        prev.map(msg => \n          msg._id === tempId ? { ...msg, status: 'sent' } : msg\n        )\n      );\n    }, 1000);\n  };\n\n  const handlePlayAudio = (url: string) => {\n    // Stop any currently playing audio\n    Object.values(audioRefs.current).forEach(audio => {\n      if (!audio.paused) {\n        audio.pause();\n        audio.currentTime = 0;\n      }\n    });\n    \n    // Play the selected audio\n    const audio = new Audio(url);\n    audioRefs.current[url] = audio;\n    audio.play().catch(console.error);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      {/* Header */}\n      <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\n        <IconButton onClick={() => navigate(-1)}><ArrowBack /></IconButton>\n        <Avatar sx={{ ml: 2, bgcolor: 'primary.main' }}>\n          {getInitials(getOtherUserName())}\n        </Avatar>\n        <Box sx={{ ml: 2 }}>\n          <Typography>{getOtherUserName()}</Typography>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {otherUser?.role === 'doctor' ? 'Doctor' : 'Patient'}\n          </Typography>\n        </Box>\n      </Paper>\n      \n      {/* Messages */}\n      <Box sx={{ flex: 1, overflow: 'auto', p: 2, bgcolor: theme.palette.grey[50] }}>\n        {messages.map(msg => (\n          <ChatMessage\n            key={msg._id}\n            message={msg}\n            isOwnMessage={msg.sender._id === currentUser?._id}\n            onPlayAudio={msg.audioUrl ? () => handlePlayAudio(msg.audioUrl!) : undefined}\n          />\n        ))}\n        <div ref={messagesEndRef} />\n      </Box>\n      \n      {/* Audio Recorder */}\n      {showAudioRecorder && (\n        <Box sx={{ p: 2, borderTop: `1px solid ${theme.palette.divider}` }}>\n          <AudioRecorder \n            onSend={(blob) => {\n              handleSendMessage('Voice message', blob);\n              setShowAudioRecorder(false);\n            }}\n            onCancel={() => setShowAudioRecorder(false)}\n          />\n        </Box>\n      )}\n      \n      {/* Message Input */}\n      <Box sx={{ p: 2, display: 'flex', gap: 1, borderTop: `1px solid ${theme.palette.divider}` }}>\n        <IconButton><AttachFile /></IconButton>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          id=\"chat-message-input\"\n          label=\"Type a message\"\n          aria-label=\"Type a message\"\n          placeholder=\"Type a message...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(message)}\n          disabled={showAudioRecorder}\n          size=\"small\"\n          sx={{ \n            bgcolor: 'background.paper', \n            borderRadius: 2,\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                border: 'none',\n              },\n              '&:hover fieldset': {\n                border: 'none',\n              },\n              '&.Mui-focused fieldset': {\n                border: 'none',\n              },\n            },\n          }}\n          InputLabelProps={{\n            shrink: false,\n            'aria-hidden': true,\n          }}\n        />\n        <IconButton \n          onClick={() => showAudioRecorder ? setShowAudioRecorder(false) : setShowAudioRecorder(true)}\n          color={showAudioRecorder ? 'primary' : 'default'}\n        >\n          <Mic />\n        </IconButton>\n        <IconButton \n          onClick={() => handleSendMessage(message)}\n          disabled={!message.trim() || showAudioRecorder}\n          color=\"primary\"\n        >\n          <Send />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatPageWithAudio;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}