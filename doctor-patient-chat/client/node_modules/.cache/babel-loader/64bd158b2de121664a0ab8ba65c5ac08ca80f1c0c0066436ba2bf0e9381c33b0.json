{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, List, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, Button, CircularProgress, Badge, Switch, FormControlLabel, TextField, InputAdornment } from '@mui/material';\nimport { Person as PersonIcon, Search as SearchIcon, Chat as ChatIcon, CheckCircle as CheckCircleIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext.tsx';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isAvailable, setIsAvailable] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/chat/conversations`);\n        const conversations = response.data || [];\n        const patientsList = conversations.map(conversation => {\n          var _conversation$lastMes, _conversation$lastMes2;\n          return {\n            id: conversation.user.id,\n            name: conversation.user.name,\n            email: conversation.user.email,\n            lastSeen: new Date(conversation.user.lastSeen).toLocaleString(),\n            unreadCount: conversation.unreadCount || 0,\n            lastMessage: ((_conversation$lastMes = conversation.lastMessage) === null || _conversation$lastMes === void 0 ? void 0 : _conversation$lastMes.content) || '',\n            lastMessageTime: (_conversation$lastMes2 = conversation.lastMessage) !== null && _conversation$lastMes2 !== void 0 && _conversation$lastMes2.createdAt ? new Date(conversation.lastMessage.createdAt).toLocaleTimeString() : ''\n          };\n        });\n        setPatients(patientsList);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user) {\n      fetchPatients();\n      updateAvailability();\n    }\n  }, [user]);\n  const updateAvailability = async () => {\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, {\n        isAvailable\n      });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n    }\n  };\n  const handleAvailabilityChange = async event => {\n    const newStatus = event.target.checked;\n    setIsAvailable(newStatus);\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, {\n        isAvailable: newStatus\n      });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n      setIsAvailable(!newStatus); // Revert on error\n    }\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(searchTerm.toLowerCase()) || patient.email.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleStartChat = patientId => {\n    navigate(`/chat/${patientId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            children: \"Manage your patient consultations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: isAvailable,\n              onChange: handleAvailabilityChange,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: 10,\n                  height: 10,\n                  borderRadius: '50%',\n                  bgcolor: isAvailable ? 'success.main' : 'error.main',\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: isAvailable ? 'Available' : 'Unavailable'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => logout(),\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Search patients...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                color: \"action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: filteredPatients.length > 0 ? filteredPatients.map((patient, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 36\n                }, this),\n                onClick: () => handleStartChat(patient.id),\n                children: \"Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  overlap: \"circular\",\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  variant: \"dot\",\n                  color: \"success\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    variant: \"subtitle1\",\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    ml: 1,\n                    children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                      color: \"success\",\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      ml: 0.5,\n                      children: \"Online\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    variant: \"body2\",\n                    color: \"text.primary\",\n                    display: \"block\",\n                    noWrap: true,\n                    sx: {\n                      maxWidth: '500px'\n                    },\n                    children: patient.lastMessage || 'No messages yet'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: patient.lastSeen\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), patient.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                ml: 2,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: 'primary.main',\n                    width: 24,\n                    height: 24,\n                    fontSize: '0.75rem'\n                  },\n                  children: patient.unreadCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), index < filteredPatients.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 59\n            }, this)]\n          }, patient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            py: 4,\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n              color: \"disabled\",\n              sx: {\n                fontSize: 60,\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"No patients found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: searchTerm ? 'Try a different search term' : 'Patients who message you will appear here'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDashboard, \"ECkgaZ9JoeptNMrPobnhipjrQls=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","API_BASE_URL","useNavigate","Container","Typography","Box","Paper","List","ListItem","ListItemAvatar","Avatar","ListItemText","Divider","Button","CircularProgress","Badge","Switch","FormControlLabel","TextField","InputAdornment","Person","PersonIcon","Search","SearchIcon","Chat","ChatIcon","CheckCircle","CheckCircleIcon","useAuth","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","patients","setPatients","loading","setLoading","isAvailable","setIsAvailable","searchTerm","setSearchTerm","user","logout","navigate","fetchPatients","response","get","conversations","data","patientsList","map","conversation","_conversation$lastMes","_conversation$lastMes2","id","name","email","lastSeen","Date","toLocaleString","unreadCount","lastMessage","content","lastMessageTime","createdAt","toLocaleTimeString","error","console","updateAvailability","put","handleAvailabilityChange","event","newStatus","target","checked","filteredPatients","filter","patient","toLowerCase","includes","handleStartChat","patientId","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","my","mb","variant","component","gutterBottom","color","gap","control","onChange","label","width","height","borderRadius","bgcolor","mr","onClick","elevation","p","fullWidth","placeholder","value","e","InputProps","startAdornment","position","length","index","secondaryAction","startIcon","overlap","anchorOrigin","vertical","horizontal","primary","ml","fontSize","secondary","noWrap","textAlign","py","_c","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/pages/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Divider,\n  Button,\n  CircularProgress,\n  Badge,\n  Switch,\n  FormControlLabel,\n  TextField,\n  InputAdornment\n} from '@mui/material';\nimport { \n  Person as PersonIcon, \n  Search as SearchIcon,\n  Chat as ChatIcon,\n  MedicalServices as MedicalServicesIcon,\n  CheckCircle as CheckCircleIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext.tsx';\nimport axios from 'axios';\n\ninterface Patient {\n  id: string;\n  name: string;\n  email: string;\n  lastSeen: string;\n  unreadCount?: number;\n  lastMessage?: string;\n  lastMessageTime?: string;\n}\n\nconst DoctorDashboard: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isAvailable, setIsAvailable] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/chat/conversations`);\n        const conversations = response.data || [];\n        \n        const patientsList = conversations.map((conversation: any) => ({\n          id: conversation.user.id,\n          name: conversation.user.name,\n          email: conversation.user.email,\n          lastSeen: new Date(conversation.user.lastSeen).toLocaleString(),\n          unreadCount: conversation.unreadCount || 0,\n          lastMessage: conversation.lastMessage?.content || '',\n          lastMessageTime: conversation.lastMessage?.createdAt \n            ? new Date(conversation.lastMessage.createdAt).toLocaleTimeString() \n            : ''\n        }));\n\n        setPatients(patientsList);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user) {\n      fetchPatients();\n      updateAvailability();\n    }\n  }, [user]);\n\n  const updateAvailability = async () => {\n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, { isAvailable });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n    }\n  };\n\n  const handleAvailabilityChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newStatus = event.target.checked;\n    setIsAvailable(newStatus);\n    \n    try {\n      await axios.put(`${API_BASE_URL}/users/availability`, { isAvailable: newStatus });\n    } catch (error) {\n      console.error('Error updating availability:', error);\n      setIsAvailable(!newStatus); // Revert on error\n    }\n  };\n\n  const filteredPatients = patients.filter(patient =>\n    patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    patient.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleStartChat = (patientId: string) => {\n    navigate(`/chat/${patientId}`);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ my: 4 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n          <Box>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              My Patients\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Manage your patient consultations\n            </Typography>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <FormControlLabel\n              control={\n                <Switch \n                  checked={isAvailable} \n                  onChange={handleAvailabilityChange}\n                  color=\"primary\"\n                />\n              }\n              label={\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Box \n                    sx={{\n                      width: 10,\n                      height: 10,\n                      borderRadius: '50%',\n                      bgcolor: isAvailable ? 'success.main' : 'error.main',\n                      mr: 1\n                    }}\n                  />\n                  <Typography variant=\"body2\">\n                    {isAvailable ? 'Available' : 'Unavailable'}\n                  </Typography>\n                </Box>\n              }\n            />\n            <Button \n              variant=\"outlined\" \n              color=\"primary\"\n              onClick={() => logout()}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Box>\n\n        <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search patients...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon color=\"action\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Paper>\n\n        <Paper elevation={2}>\n          <List>\n            {filteredPatients.length > 0 ? (\n              filteredPatients.map((patient, index) => (\n                <React.Fragment key={patient.id}>\n                  <ListItem \n                    alignItems=\"flex-start\"\n                    secondaryAction={\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ChatIcon />}\n                        onClick={() => handleStartChat(patient.id)}\n                      >\n                        Chat\n                      </Button>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Badge\n                        overlap=\"circular\"\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                        variant=\"dot\"\n                        color=\"success\"\n                      >\n                        <Avatar>\n                          <PersonIcon />\n                        </Avatar>\n                      </Badge>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Box display=\"flex\" alignItems=\"center\">\n                          <Typography component=\"span\" variant=\"subtitle1\">\n                            {patient.name}\n                          </Typography>\n                          <Box display=\"flex\" alignItems=\"center\" ml={1}>\n                            <CheckCircleIcon color=\"success\" fontSize=\"small\" />\n                            <Typography variant=\"caption\" color=\"text.secondary\" ml={0.5}>\n                              Online\n                            </Typography>\n                          </Box>\n                        </Box>\n                      }\n                      secondary={\n                        <>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            display=\"block\"\n                            noWrap\n                            sx={{ maxWidth: '500px' }}\n                          >\n                            {patient.lastMessage || 'No messages yet'}\n                          </Typography>\n                          <Typography\n                            component=\"span\"\n                            variant=\"caption\"\n                            color=\"text.secondary\"\n                          >\n                            {patient.lastSeen}\n                          </Typography>\n                        </>\n                      }\n                    />\n                    {patient.unreadCount > 0 && (\n                      <Box ml={2}>\n                        <Avatar sx={{ bgcolor: 'primary.main', width: 24, height: 24, fontSize: '0.75rem' }}>\n                          {patient.unreadCount}\n                        </Avatar>\n                      </Box>\n                    )}\n                  </ListItem>\n                  {index < filteredPatients.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n                </React.Fragment>\n              ))\n            ) : (\n              <Box textAlign=\"center\" py={4}>\n                <PersonIcon color=\"disabled\" sx={{ fontSize: 60, mb: 2 }} />\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  No patients found\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {searchTerm ? 'Try a different search term' : 'Patients who message you will appear here'}\n                </Typography>\n              </Box>\n            )}\n          </List>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DoctorDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,SAAS,EACTC,UAAU,EACVC,GAAG,EACHC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,cAAc,EACdC,MAAM,EACNC,YAAY,EACZC,OAAO,EACPC,MAAM,EACNC,gBAAgB,EAChBC,KAAK,EACLC,MAAM,EACNC,gBAAgB,EAChBC,SAAS,EACTC,cAAc,QACT,eAAe;AACtB,SACEC,MAAM,IAAIC,UAAU,EACpBC,MAAM,IAAIC,UAAU,EACpBC,IAAI,IAAIC,QAAQ,EAEhBC,WAAW,IAAIC,eAAe,QACzB,qBAAqB;AAC5B,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAY1B,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAE6C,IAAI;IAAEC;EAAO,CAAC,GAAGjB,OAAO,CAAC,CAAC;EAClC,MAAMkB,QAAQ,GAAG5C,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAM+C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGhD,YAAY,qBAAqB,CAAC;QACtE,MAAMiD,aAAa,GAAGF,QAAQ,CAACG,IAAI,IAAI,EAAE;QAEzC,MAAMC,YAAY,GAAGF,aAAa,CAACG,GAAG,CAAEC,YAAiB;UAAA,IAAAC,qBAAA,EAAAC,sBAAA;UAAA,OAAM;YAC7DC,EAAE,EAAEH,YAAY,CAACV,IAAI,CAACa,EAAE;YACxBC,IAAI,EAAEJ,YAAY,CAACV,IAAI,CAACc,IAAI;YAC5BC,KAAK,EAAEL,YAAY,CAACV,IAAI,CAACe,KAAK;YAC9BC,QAAQ,EAAE,IAAIC,IAAI,CAACP,YAAY,CAACV,IAAI,CAACgB,QAAQ,CAAC,CAACE,cAAc,CAAC,CAAC;YAC/DC,WAAW,EAAET,YAAY,CAACS,WAAW,IAAI,CAAC;YAC1CC,WAAW,EAAE,EAAAT,qBAAA,GAAAD,YAAY,CAACU,WAAW,cAAAT,qBAAA,uBAAxBA,qBAAA,CAA0BU,OAAO,KAAI,EAAE;YACpDC,eAAe,EAAE,CAAAV,sBAAA,GAAAF,YAAY,CAACU,WAAW,cAAAR,sBAAA,eAAxBA,sBAAA,CAA0BW,SAAS,GAChD,IAAIN,IAAI,CAACP,YAAY,CAACU,WAAW,CAACG,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,GACjE;UACN,CAAC;QAAA,CAAC,CAAC;QAEH/B,WAAW,CAACe,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACR9B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIK,IAAI,EAAE;MACRG,aAAa,CAAC,CAAC;MACfwB,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAAC3B,IAAI,CAAC,CAAC;EAEV,MAAM2B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,GAAGvE,YAAY,qBAAqB,EAAE;QAAEuC;MAAY,CAAC,CAAC;IACxE,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMI,wBAAwB,GAAG,MAAOC,KAA0C,IAAK;IACrF,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO;IACtCpC,cAAc,CAACkC,SAAS,CAAC;IAEzB,IAAI;MACF,MAAM9C,KAAK,CAAC2C,GAAG,CAAC,GAAGvE,YAAY,qBAAqB,EAAE;QAAEuC,WAAW,EAAEmC;MAAU,CAAC,CAAC;IACnF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD5B,cAAc,CAAC,CAACkC,SAAS,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAG1C,QAAQ,CAAC2C,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACtB,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxC,UAAU,CAACuC,WAAW,CAAC,CAAC,CAAC,IAC7DD,OAAO,CAACrB,KAAK,CAACsB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxC,UAAU,CAACuC,WAAW,CAAC,CAAC,CAC/D,CAAC;EAED,MAAME,eAAe,GAAIC,SAAiB,IAAK;IAC7CtC,QAAQ,CAAC,SAASsC,SAAS,EAAE,CAAC;EAChC,CAAC;EAED,IAAI9C,OAAO,EAAE;IACX,oBACEP,OAAA,CAAC1B,GAAG;MAACgF,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAACC,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC9E1D,OAAA,CAACjB,gBAAgB;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACE9D,OAAA,CAAC5B,SAAS;IAAC2F,QAAQ,EAAC,IAAI;IAAAL,QAAA,eACtB1D,OAAA,CAAC1B,GAAG;MAAC0F,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACjB1D,OAAA,CAAC1B,GAAG;QAACgF,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,eAAe;QAACC,UAAU,EAAC,QAAQ;QAACU,EAAE,EAAE,CAAE;QAAAR,QAAA,gBAC3E1D,OAAA,CAAC1B,GAAG;UAAAoF,QAAA,gBACF1D,OAAA,CAAC3B,UAAU;YAAC8F,OAAO,EAAC,IAAI;YAACC,SAAS,EAAC,IAAI;YAACC,YAAY;YAAAX,QAAA,EAAC;UAErD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb9D,OAAA,CAAC3B,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAACG,KAAK,EAAC,gBAAgB;YAAAZ,QAAA,EAAC;UAEnD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACN9D,OAAA,CAAC1B,GAAG;UAACgF,OAAO,EAAC,MAAM;UAACE,UAAU,EAAC,QAAQ;UAACe,GAAG,EAAE,CAAE;UAAAb,QAAA,gBAC7C1D,OAAA,CAACd,gBAAgB;YACfsF,OAAO,eACLxE,OAAA,CAACf,MAAM;cACL6D,OAAO,EAAErC,WAAY;cACrBgE,QAAQ,EAAE/B,wBAAyB;cACnC4B,KAAK,EAAC;YAAS;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CACF;YACDY,KAAK,eACH1E,OAAA,CAAC1B,GAAG;cAACgF,OAAO,EAAC,MAAM;cAACE,UAAU,EAAC,QAAQ;cAAAE,QAAA,gBACrC1D,OAAA,CAAC1B,GAAG;gBACF0F,EAAE,EAAE;kBACFW,KAAK,EAAE,EAAE;kBACTC,MAAM,EAAE,EAAE;kBACVC,YAAY,EAAE,KAAK;kBACnBC,OAAO,EAAErE,WAAW,GAAG,cAAc,GAAG,YAAY;kBACpDsE,EAAE,EAAE;gBACN;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACF9D,OAAA,CAAC3B,UAAU;gBAAC8F,OAAO,EAAC,OAAO;gBAAAT,QAAA,EACxBjD,WAAW,GAAG,WAAW,GAAG;cAAa;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACF9D,OAAA,CAAClB,MAAM;YACLqF,OAAO,EAAC,UAAU;YAClBG,KAAK,EAAC,SAAS;YACfU,OAAO,EAAEA,CAAA,KAAMlE,MAAM,CAAC,CAAE;YAAA4C,QAAA,EACzB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN9D,OAAA,CAACzB,KAAK;QAAC0G,SAAS,EAAE,CAAE;QAACjB,EAAE,EAAE;UAAEkB,CAAC,EAAE,CAAC;UAAEhB,EAAE,EAAE;QAAE,CAAE;QAAAR,QAAA,eACvC1D,OAAA,CAACb,SAAS;UACRgG,SAAS;UACThB,OAAO,EAAC,UAAU;UAClBiB,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAE1E,UAAW;UAClB8D,QAAQ,EAAGa,CAAC,IAAK1E,aAAa,CAAC0E,CAAC,CAACzC,MAAM,CAACwC,KAAK,CAAE;UAC/CE,UAAU,EAAE;YACVC,cAAc,eACZxF,OAAA,CAACZ,cAAc;cAACqG,QAAQ,EAAC,OAAO;cAAA/B,QAAA,eAC9B1D,OAAA,CAACR,UAAU;gBAAC8E,KAAK,EAAC;cAAQ;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf;UAEpB;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER9D,OAAA,CAACzB,KAAK;QAAC0G,SAAS,EAAE,CAAE;QAAAvB,QAAA,eAClB1D,OAAA,CAACxB,IAAI;UAAAkF,QAAA,EACFX,gBAAgB,CAAC2C,MAAM,GAAG,CAAC,GAC1B3C,gBAAgB,CAACzB,GAAG,CAAC,CAAC2B,OAAO,EAAE0C,KAAK,kBAClC3F,OAAA,CAACjC,KAAK,CAACkC,QAAQ;YAAAyD,QAAA,gBACb1D,OAAA,CAACvB,QAAQ;cACP+E,UAAU,EAAC,YAAY;cACvBoC,eAAe,eACb5F,OAAA,CAAClB,MAAM;gBACLqF,OAAO,EAAC,WAAW;gBACnBG,KAAK,EAAC,SAAS;gBACfuB,SAAS,eAAE7F,OAAA,CAACN,QAAQ;kBAAAiE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACxBkB,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAACH,OAAO,CAACvB,EAAE,CAAE;gBAAAgC,QAAA,EAC5C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT;cAAAJ,QAAA,gBAED1D,OAAA,CAACtB,cAAc;gBAAAgF,QAAA,eACb1D,OAAA,CAAChB,KAAK;kBACJ8G,OAAO,EAAC,UAAU;kBAClBC,YAAY,EAAE;oBAAEC,QAAQ,EAAE,QAAQ;oBAAEC,UAAU,EAAE;kBAAQ,CAAE;kBAC1D9B,OAAO,EAAC,KAAK;kBACbG,KAAK,EAAC,SAAS;kBAAAZ,QAAA,eAEf1D,OAAA,CAACrB,MAAM;oBAAA+E,QAAA,eACL1D,OAAA,CAACV,UAAU;sBAAAqE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACR;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,eACjB9D,OAAA,CAACpB,YAAY;gBACXsH,OAAO,eACLlG,OAAA,CAAC1B,GAAG;kBAACgF,OAAO,EAAC,MAAM;kBAACE,UAAU,EAAC,QAAQ;kBAAAE,QAAA,gBACrC1D,OAAA,CAAC3B,UAAU;oBAAC+F,SAAS,EAAC,MAAM;oBAACD,OAAO,EAAC,WAAW;oBAAAT,QAAA,EAC7CT,OAAO,CAACtB;kBAAI;oBAAAgC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACb9D,OAAA,CAAC1B,GAAG;oBAACgF,OAAO,EAAC,MAAM;oBAACE,UAAU,EAAC,QAAQ;oBAAC2C,EAAE,EAAE,CAAE;oBAAAzC,QAAA,gBAC5C1D,OAAA,CAACJ,eAAe;sBAAC0E,KAAK,EAAC,SAAS;sBAAC8B,QAAQ,EAAC;oBAAO;sBAAAzC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eACpD9D,OAAA,CAAC3B,UAAU;sBAAC8F,OAAO,EAAC,SAAS;sBAACG,KAAK,EAAC,gBAAgB;sBAAC6B,EAAE,EAAE,GAAI;sBAAAzC,QAAA,EAAC;oBAE9D;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAY,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN;gBACDuC,SAAS,eACPrG,OAAA,CAAAE,SAAA;kBAAAwD,QAAA,gBACE1D,OAAA,CAAC3B,UAAU;oBACT+F,SAAS,EAAC,MAAM;oBAChBD,OAAO,EAAC,OAAO;oBACfG,KAAK,EAAC,cAAc;oBACpBhB,OAAO,EAAC,OAAO;oBACfgD,MAAM;oBACNtC,EAAE,EAAE;sBAAED,QAAQ,EAAE;oBAAQ,CAAE;oBAAAL,QAAA,EAEzBT,OAAO,CAAChB,WAAW,IAAI;kBAAiB;oBAAA0B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC,eACb9D,OAAA,CAAC3B,UAAU;oBACT+F,SAAS,EAAC,MAAM;oBAChBD,OAAO,EAAC,SAAS;oBACjBG,KAAK,EAAC,gBAAgB;oBAAAZ,QAAA,EAErBT,OAAO,CAACpB;kBAAQ;oBAAA8B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC;gBAAA,eACb;cACH;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,EACDb,OAAO,CAACjB,WAAW,GAAG,CAAC,iBACtBhC,OAAA,CAAC1B,GAAG;gBAAC6H,EAAE,EAAE,CAAE;gBAAAzC,QAAA,eACT1D,OAAA,CAACrB,MAAM;kBAACqF,EAAE,EAAE;oBAAEc,OAAO,EAAE,cAAc;oBAAEH,KAAK,EAAE,EAAE;oBAAEC,MAAM,EAAE,EAAE;oBAAEwB,QAAQ,EAAE;kBAAU,CAAE;kBAAA1C,QAAA,EACjFT,OAAO,CAACjB;gBAAW;kBAAA2B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,EACV6B,KAAK,GAAG5C,gBAAgB,CAAC2C,MAAM,GAAG,CAAC,iBAAI1F,OAAA,CAACnB,OAAO;cAACsF,OAAO,EAAC,OAAO;cAACC,SAAS,EAAC;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAtE/Db,OAAO,CAACvB,EAAE;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuEf,CACjB,CAAC,gBAEF9D,OAAA,CAAC1B,GAAG;YAACiI,SAAS,EAAC,QAAQ;YAACC,EAAE,EAAE,CAAE;YAAA9C,QAAA,gBAC5B1D,OAAA,CAACV,UAAU;cAACgF,KAAK,EAAC,UAAU;cAACN,EAAE,EAAE;gBAAEoC,QAAQ,EAAE,EAAE;gBAAElC,EAAE,EAAE;cAAE;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5D9D,OAAA,CAAC3B,UAAU;cAAC8F,OAAO,EAAC,IAAI;cAACG,KAAK,EAAC,gBAAgB;cAAAZ,QAAA,EAAC;YAEhD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9D,OAAA,CAAC3B,UAAU;cAAC8F,OAAO,EAAC,OAAO;cAACG,KAAK,EAAC,gBAAgB;cAAAZ,QAAA,EAC/C/C,UAAU,GAAG,6BAA6B,GAAG;YAA2C;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC1D,EAAA,CA3OID,eAAyB;EAAA,QAKJN,OAAO,EACf1B,WAAW;AAAA;AAAAsI,EAAA,GANxBtG,eAAyB;AA6O/B,eAAeA,eAAe;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}