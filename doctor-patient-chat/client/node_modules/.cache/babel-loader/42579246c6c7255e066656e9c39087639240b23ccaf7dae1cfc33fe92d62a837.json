{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/context/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState } from 'react';\nimport { ThemeProvider as MuiThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(() => ({\n    mode,\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), [mode]);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '#4a6bff' : '#7d95ff',\n        light: mode === 'light' ? '#7d95ff' : '#a8b9ff',\n        dark: mode === 'light' ? '#0045cc' : '#4a6bff',\n        contrastText: '#fff'\n      },\n      secondary: {\n        main: mode === 'light' ? '#6e3bde' : '#9d6bff',\n        light: mode === 'light' ? '#9d6bff' : '#c29bff',\n        dark: mode === 'light' ? '#4d2a9a' : '#6e3bde',\n        contrastText: '#fff'\n      },\n      error: {\n        main: '#ff3b5c'\n      },\n      success: {\n        main: '#00c853'\n      },\n      warning: {\n        main: '#ffab00'\n      },\n      info: {\n        main: '#00b8d4'\n      },\n      background: {\n        default: mode === 'light' ? '#f8fafc' : '#121212',\n        paper: mode === 'light' ? '#fff' : '#1e1e1e'\n      },\n      text: {\n        primary: mode === 'light' ? '#1e293b' : '#f8fafc',\n        secondary: mode === 'light' ? '#64748b' : '#cbd5e1',\n        disabled: mode === 'light' ? '#94a3b8' : '#64748b'\n      },\n      divider: mode === 'light' ? 'rgba(226, 232, 240, 0.6)' : 'rgba(255, 255, 255, 0.12)'\n    },\n    typography: {\n      fontFamily: '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n      h1: {\n        fontWeight: 700,\n        fontSize: '2.5rem',\n        lineHeight: 1.2,\n        letterSpacing: '-0.02em'\n      }\n      // Add other typography settings as needed\n    },\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: {\n          body: {\n            transition: 'background-color 0.3s ease, color 0.3s ease'\n          }\n        }\n      }\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n_c = ThemeContextProvider;\nexport const useThemeContext = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useThemeContext must be used within a ThemeContextProvider');\n  }\n  return context;\n};\n_s2(useThemeContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","ThemeProvider","MuiThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeContextProvider","children","_s","mode","setMode","colorMode","toggleColorMode","prevMode","theme","palette","primary","main","light","dark","contrastText","secondary","error","success","warning","info","background","default","paper","text","disabled","divider","typography","fontFamily","h1","fontWeight","fontSize","lineHeight","letterSpacing","components","MuiCssBaseline","styleOverrides","body","transition","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useThemeContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\ntype ThemeMode = 'light' | 'dark';\n\ninterface ThemeContextType {\n  mode: ThemeMode;\n  toggleColorMode: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeContextProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [mode, setMode] = useState<ThemeMode>('light');\n\n  const colorMode = useMemo(\n    () => ({\n      mode,\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [mode]\n  );\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          primary: { \n            main: mode === 'light' ? '#4a6bff' : '#7d95ff',\n            light: mode === 'light' ? '#7d95ff' : '#a8b9ff',\n            dark: mode === 'light' ? '#0045cc' : '#4a6bff',\n            contrastText: '#fff' \n          },\n          secondary: { \n            main: mode === 'light' ? '#6e3bde' : '#9d6bff',\n            light: mode === 'light' ? '#9d6bff' : '#c29bff',\n            dark: mode === 'light' ? '#4d2a9a' : '#6e3bde',\n            contrastText: '#fff' \n          },\n          error: { main: '#ff3b5c' },\n          success: { main: '#00c853' },\n          warning: { main: '#ffab00' },\n          info: { main: '#00b8d4' },\n          background: { \n            default: mode === 'light' ? '#f8fafc' : '#121212',\n            paper: mode === 'light' ? '#fff' : '#1e1e1e'\n          },\n          text: { \n            primary: mode === 'light' ? '#1e293b' : '#f8fafc',\n            secondary: mode === 'light' ? '#64748b' : '#cbd5e1',\n            disabled: mode === 'light' ? '#94a3b8' : '#64748b'\n          },\n          divider: mode === 'light' ? 'rgba(226, 232, 240, 0.6)' : 'rgba(255, 255, 255, 0.12)',\n        },\n        typography: {\n          fontFamily: '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          h1: { \n            fontWeight: 700, \n            fontSize: '2.5rem', \n            lineHeight: 1.2, \n            letterSpacing: '-0.02em' \n          },\n          // Add other typography settings as needed\n        },\n        components: {\n          MuiCssBaseline: {\n            styleOverrides: {\n              body: {\n                transition: 'background-color 0.3s ease, color 0.3s ease',\n              },\n            },\n          },\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ThemeContext.Provider value={colorMode}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useThemeContext = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useThemeContext must be used within a ThemeContextProvider');\n  }\n  return context;\n};\n\nexport default ThemeContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}