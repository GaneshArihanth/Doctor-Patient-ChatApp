{"ast":null,"code":"var _jsxFileName = \"/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/components/common/PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this); // Or a loading spinner\n  }\n  if (!user) {\n    // Redirect to login page if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user has the required role\n  if (!allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    const redirectTo = user.role === 'doctor' ? '/doctor' : '/patient';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(PrivateRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","children","allowedRoles","_s","user","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","includes","role","redirectTo","_c","$RefreshReg$"],"sources":["/Users/ganesharihanth/Desktop/App/doctor-patient-chat/client/src/components/common/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext.tsx';\n\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n  allowedRoles: ('doctor' | 'patient')[];\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, allowedRoles }) => {\n  const { user, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <div>Loading...</div>; // Or a loading spinner\n  }\n\n  if (!user) {\n    // Redirect to login page if not authenticated\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Check if user has the required role\n  if (!allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    const redirectTo = user.role === 'doctor' ? '/doctor' : '/patient';\n    return <Navigate to={redirectTo} replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOxD,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EACnC,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAIW,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAI,QAAA,EAAK;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,IAAI,CAACN,IAAI,EAAE;IACT;IACA,oBAAOP,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAI,CAACR,YAAY,CAACa,QAAQ,CAACX,IAAI,CAACY,IAAI,CAAC,EAAE;IACrC;IACA,MAAMC,UAAU,GAAGb,IAAI,CAACY,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,UAAU;IAClE,oBAAOnB,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAEM,UAAW;MAACH,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,oBAAOb,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CArBIH,YAAyC;EAAA,QACnBL,OAAO,EAChBD,WAAW;AAAA;AAAAwB,EAAA,GAFxBlB,YAAyC;AAuB/C,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}